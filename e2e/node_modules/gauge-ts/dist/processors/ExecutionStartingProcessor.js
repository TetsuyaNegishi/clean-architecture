"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const inspector_1 = require("inspector");
const HookRegistry_1 = require("../models/HookRegistry");
const HookType_1 = require("../models/HookType");
const HookExecutionProcessor_1 = require("./HookExecutionProcessor");
class ExecutionStartingProcessor extends HookExecutionProcessor_1.HookExecutionProcessor {
    constructor() {
        super();
        this.hookType = HookType_1.HookType.BeforeSuite;
        this.attachDebuggerEvent = "Runner Ready for Debugging";
    }
    sleepFor(ms) {
        var now = new Date().getTime();
        while (new Date().getTime() < now + ms) { /* do nothing */ }
    }
    getExecutionInfo(message) {
        if (process.env.DEBUGGING) {
            var port = parseInt(process.env.DEBUG_PORT);
            console.log(this.attachDebuggerEvent);
            inspector_1.open(port, "127.0.0.1", true);
            this.sleepFor(1000);
        }
        return message.executionStartingRequest
            .currentExecutionInfo;
    }
    getApplicableHooks(message) {
        return HookRegistry_1.default.get(this.hookType, []);
    }
}
exports.ExecutionStartingProcessor = ExecutionStartingProcessor;
