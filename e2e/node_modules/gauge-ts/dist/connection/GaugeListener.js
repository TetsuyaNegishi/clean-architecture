"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const GaugeConnection_1 = require("./GaugeConnection");
class GaugeListener {
    constructor(factory) {
        this._processorFactory = factory;
    }
    pollForMessages() {
        let connection = new GaugeConnection_1.GaugeConnection();
        this._processorFactory.on('messageProcessed', (message) => {
            connection.write(message);
        });
        connection.on('messageReceived', (message) => __awaiter(this, void 0, void 0, function* () {
            yield this._processorFactory.process(message);
        }));
        connection.start();
    }
}
exports.GaugeListener = GaugeListener;
